/* - set up some basic box sizing with (everything selector) 
   - This is to make styling so much easier*/
*, *::after, *::before {
    box-sizing: border-box; }

:root { /*automate the sizes */
    --cell-size: 100px;
    /* Make the [X] and [O] to be 90% of the cell size */
    --XO-size:  calc(var(--cell-size)*.9)
}

/* Remove all margins so the winning black background is easier to place */
body {
    margin: 0;
    background-image: url('grass.jpg');
    background-repeat: no-repeat;
    background-size: 100% 100%;
    background-position: center;  }

/* The board wraps all of our cells 
   - VH allows us to easily center it inside of our screen*/
.board {
    margin: auto;
    margin-left: auto;
    margin-right: auto;
    margin-top: auto;
    width: 100;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center;
    /* To ensure X's and O's are centered */
    justify-items:stretch;
    align-items: center;
    grid-template-columns: repeat(5,auto); 
}

.cell {
    width: 100px;
    height: 100px;
    border: 2px solid black;
    display: flex;
    justify-content: center;
    align-items: center;

    position: relative; /*makes a pefect X*/

    cursor: pointer; /* makes a pointer when we hover over cell*/
}


.cell.x, .cell.o {
    cursor: not-allowed;
}
/*defined above selector so [hover] overide properly*/
.cell.x::before, .cell.x::after {
    background-color: rgb(4, 198, 198); 
}.cell.o::before, .cell.o::after {
    background-color: rgb(0, 0, 0); 
}

.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after,
.board.o .cell:not(.x):not(.o):hover::before,
.board.o .cell:not(.x):not(.o):hover::after {
    background-color: lightgrey;
}


/* Remove the grid from the edges */
.cell:first-child, .cell:nth-child(2), .cell:nth-child(3),.cell:nth-child(4), .cell:nth-child(5) {
    border-top: none; 
}.cell:nth-child(5n + 1) {
    border-left: none;
}.cell:nth-child(5n + 5) { 
    border-right: none;
}.cell:nth-child(20) ~ .cell { 
    border-bottom: none;
}

/* ---------------Modification for X cells--------------- */
.cell.x::before, .cell.x::after,
.board.x .cell:not(.x):not(.o):hover::before, .board.x .cell:not(.x):not(.o):hover::after { /*not(.x):not(.o)*/
    content: '';

    position: absolute; /*to not overlap each other*/
    width: calc(var(--XO-size) *.13);
    height: var(--XO-size);
}
.cell.x::before,
.board.x .cell:not(.x):not(.o):hover::before {
    transform: rotate(45deg);   }
.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::after {
    transform: rotate(-45deg);
}

/* ---------------Modification for O cells--------------- */
.cell.o::before, .cell.o::after,
.board.o .cell:not(.x):not(.o):hover::before, .board.o .cell:not(.x):not(.o):hover::after {
    content: '';
    position: absolute; 
    /*To have different sizes of circle (diff from X)
    width: var(--XO-size);
    height: var(--XO-size);            */

    border-radius: 50%;
}

.cell.o::before,
.board.o .cell:not(.x):not(.o):hover::before {
    width: var(--XO-size);
    height: calc(var(--XO-size) *.9);
    /* background-color: black;      removing this to overide hover */
}
.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::after {
    width: calc(var(--XO-size) *.7);
    height: calc(var(--XO-size) *.7);
    background-color: white;;
}

.winning-message {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color:rgba(0, 0, 0, 0.8);
    display: none;
    /*display: flex;   to make it flex when called*/
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;

    flex-direction: column;
}

.winning-message button {
    font-size: 4rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

.winning-message button:hover {
    background-color: black;
    color: white;
    border-color: white;
}

.winning-message.show {
    display: flex;
}